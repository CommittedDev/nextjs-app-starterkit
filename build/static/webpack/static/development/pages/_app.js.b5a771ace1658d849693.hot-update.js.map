{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.b5a771ace1658d849693.hot-update.js","sources":["webpack:///./src/store/tables/workers/updateTablesValues.js"],"sourcesContent":["import { put } from 'redux-saga/effects';\r\nimport { logger } from 'src/services/logger';\r\nimport { setValues } from '../actions';\r\n\r\nexport default function* updateTablesValues(action) {\r\n    const { values } = action.payload\r\n    try {\r\n        //     yield put(setRamzorPress({ storeKey, status: consts.API_STATUS.START, error: null, loading: true, data: dataForClient }));\r\n        //     const res = yield httpRequest(api.request, { url: 'setCompliance', method: 'post', data: dataToSend });\r\n        //     if (res.error) {\r\n        //         const errType = res.message === 'Network Error' ? consts.API_STATUS.FAILED_NETWORK : consts.API_STATUS.FAILED;\r\n        //         yield put(setRamzorPress({ storeKey, status: errType, error: res, loading: false, data: dataForClient }));\r\n        //     } else {\r\n        //         yield put(setRamzorPress({\r\n        //             storeKey, status: consts.API_STATUS.FINISHED, error: null, loading: false, data: dataForClient\r\n        //         }));\r\n        //     }\r\n        const data = values\r\n        yield put(setValues({\r\n            error: null, loading: false, data\r\n        }));\r\n    } catch (err) {\r\n        console.log('error in onRamzorPress', err);\r\n    }\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAIA;AACA;AALA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAcA;AACA;AAAA;AAAA;AADA;AACA;AAfA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAkBA;AACA;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}