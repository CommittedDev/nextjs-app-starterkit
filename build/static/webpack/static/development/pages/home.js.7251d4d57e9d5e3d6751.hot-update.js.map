{"version":3,"file":"static/webpack/static\\development\\pages\\home.js.7251d4d57e9d5e3d6751.hot-update.js","sources":["webpack:///./src/components/table/Table.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { TYPES } from 'src/components/data'\r\nimport Input from '@material-ui/core/Input';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Select from '@material-ui/core/Select';\r\nimport PropTypes from 'prop-types';\r\n// import { calculate } from 'src/components/data/tableUtils';\r\nimport connect from './connect'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        // width: '100%',\r\n        // marginTop: theme.spacing(3),\r\n        // overflowX: 'auto',\r\n    },\r\n    table: {\r\n        // width: 600,\r\n    },\r\n    tableTitle: {\r\n        fontSize: 20\r\n    },\r\n    TableCell: {\r\n\r\n    }\r\n}));\r\n\r\nfunction SimpleTable(props) {\r\n    const { tableTitle, data, headerTitles, tableSubTitle } = props\r\n    const classes = useStyles();\r\n\r\n    console.log(`props of ${tableTitle}`, props.tablesData);\r\n\r\n    const tableValues = props.tablesData\r\n    const influencingValues = [tableValues.d10, tableValues.d11, tableValues.d21, tableValues.d22]\r\n    useEffect(() => {\r\n        updateReadOnlyValues()\r\n    }, influencingValues)\r\n\r\n    const updateReadOnlyValues = () => {\r\n        if (tableValues.d10 && tableValues.d11) { // d12\r\n            const res = tableValues.d10 - tableValues.d11\r\n            props.actions.updateTablesValues({ values: { d12: res } })\r\n        }\r\n        if (tableValues.d21 && tableValues.d22) { // d23\r\n            const res = tableValues.d21 - tableValues.d22\r\n            props.actions.updateTablesValues({ values: { d23: res } })\r\n        }\r\n    }\r\n\r\n\r\n    \r\n\r\n    const renderTableData = () => {\r\n        if (!data) return (\r\n            <TableRow>\r\n                <TableCell align=\"left\" className={classes.TableCell}>\r\n                    no data\r\n                </TableCell>\r\n            </TableRow>\r\n        )\r\n        return data.map(row => (\r\n            <TableRow key={row.location}>\r\n                <TableCell align=\"left\" className={classes.TableCell}>\r\n                    {row.name}\r\n                </TableCell>\r\n                {row.value && <TableCell align=\"left\">{row.value}</TableCell>}\r\n                <TableCell align=\"left\">{renderValueType(row)}</TableCell>\r\n            </TableRow>\r\n        ))\r\n    }\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <Table className={classes.table}>\r\n                <TableHead>\r\n                    {tableSubTitle && <TableRow>\r\n                        <TableCell className={classes.tableTitle}\r\n                            colSpan={3}\r\n                            align=\"left\">{tableSubTitle}</TableCell>\r\n                    </TableRow>}\r\n                    {headerTitles\r\n                        ? <TableRow>\r\n                            {headerTitles.map((title) => {\r\n                                return <TableCell key={title} align=\"left\">{title}</TableCell>\r\n                            })}\r\n                        </TableRow>\r\n                        : <TableRow>\r\n                            <TableCell className={classes.tableTitle} align=\"left\">{tableTitle}</TableCell>\r\n                            <TableCell align=\"left\">Value</TableCell>\r\n                            <TableCell align=\"left\">Units</TableCell>\r\n                        </TableRow>}\r\n\r\n                </TableHead>\r\n                <TableBody>\r\n                    {renderTableData()}\r\n                </TableBody>\r\n            </Table>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nSimpleTable.defaultProps = {\r\n    units: true\r\n};\r\n\r\nSimpleTable.propTypes = {\r\n    units: PropTypes.bool\r\n};\r\n\r\nexport default connect(SimpleTable)"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AAAA;AAGA;AACA;AADA;AAGA;AAZA;AAAA;AACA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAIA;AACA;AAEA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AANA;AASA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AAFA;AAOA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAUA;AACA;AACA;AACA;AADA;AAIA;AACA;AADA;AAIA;;;;A","sourceRoot":""}