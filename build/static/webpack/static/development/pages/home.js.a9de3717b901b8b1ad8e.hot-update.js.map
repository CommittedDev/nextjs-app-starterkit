{"version":3,"file":"static/webpack/static\\development\\pages\\home.js.a9de3717b901b8b1ad8e.hot-update.js","sources":["webpack:///./src/components/Table.js"],"sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { TYPES } from 'src/components/data'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        // width: '100%',\r\n        // marginTop: theme.spacing(3),\r\n        // overflowX: 'auto',\r\n    },\r\n    table: {\r\n        // width: 600,\r\n    },\r\n    tableTitle: {\r\n        fontSize: 20\r\n    }\r\n}));\r\n\r\n\r\nexport default function SimpleTable(props) {\r\n    const { tableTitle, data } = props\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        name: 'Cat in the Hat',\r\n        age: '',\r\n        multiline: 'Controlled',\r\n        currency: 'EUR',\r\n    });\r\n\r\n    const handleChange = name => event => {\r\n        debugger\r\n        setValues({ ...values, [name]: event.target.value });\r\n    };\r\n\r\n\r\n    const renderValueType = (row) => {\r\n        switch (row.type) {\r\n            case TYPES.NUMERIC:\r\n                return <TextField\r\n                    id=\"stasdsdandard-numberasdasdasdsadsasadasd\"\r\n                    label=\"Number\"\r\n                    value={values.age}\r\n                    onChange={handleChange('val')}\r\n                    type=\"number\"\r\n                    className={classes.textField}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    margin=\"normal\"\r\n                />\r\n            case TYPES.RANGE:\r\n                return;\r\n            case TYPES.SELECT:\r\n                return;\r\n\r\n\r\n            default:\r\n                return row.type\r\n        }\r\n    }\r\n\r\n    const renderTableData = () => {\r\n        if (!data) return <div>no data</div>\r\n        return data.map(row => (\r\n            <TableRow key={row.name}>\r\n                <TableCell align=\"left\">\r\n                    {row.name}\r\n                </TableCell>\r\n                <TableCell align=\"left\">{row.value}</TableCell>\r\n                <TableCell align=\"left\">{renderValueType(row)}</TableCell>\r\n            </TableRow>\r\n        ))\r\n    }\r\n    console.log('data', data);\r\n\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <Table className={classes.table}>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell className={classes.tableTitle} align=\"left\">{tableTitle}</TableCell>\r\n                        <TableCell align=\"left\">Value</TableCell>\r\n                        <TableCell align=\"left\">Units</TableCell>\r\n\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {renderTableData()}\r\n                </TableBody>\r\n            </Table>\r\n        </Paper>\r\n    );\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AAAA;AAGA;AACA;AADA;AATA;AAAA;AAeA;AAAA;AAAA;AAEA;AACA;AAHA;AAIA;AACA;AACA;AACA;AAJA;AAHA;AAAA;AAAA;AACA;AASA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAVA;AACA;AAWA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AArBA;AAuBA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AANA;AASA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAUA;;;;A","sourceRoot":""}