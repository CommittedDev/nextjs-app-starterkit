{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { renderValueType, handleInputChange } from \"./utils\";\nimport Input from '@material-ui/core/Input';\nimport TableTitle from \"./TableTitle\";\nimport HeaderCols from \"./HeaderCols\";\nimport NoDataTableCell from \"./NoDataTableCell\";\nimport WaterAnalysisTitle from \"./WaterAnalysisTitle\";\nimport PropTypes from 'prop-types'; // import { calculate } from 'src/components/data/tableUtils';\n\nimport connect from \"./connect\";\nconst useStyles = makeStyles(theme => ({\n  root: {// width: '100%',\n    // marginTop: theme.spacing(3),\n    // overflowX: 'auto',\n  },\n  table: {// width: 600,\n  },\n  tableTitle: {\n    fontSize: 20\n  },\n  TableCell: {},\n  textFieldUNEditable: {\n    background: 'lightblue'\n  }\n}));\n\nfunction SimpleTable(props) {\n  const {\n    data,\n    headerCols,\n    tableTitle,\n    tablesData,\n    waterAnalysisTitle,\n    actions\n  } = props;\n  const {\n    updateTablesValues\n  } = actions;\n  const classes = useStyles(); // console.log(`tablesData`, tablesData);\n\n  const tableValues = tablesData; // const influencingValues = [\n  //     tableValues.d10,\n  //     tableValues.d11,\n  //     tableValues.d21,\n  //     tableValues.d22,\n  //     tableValues.e30,\n  //     tableValues.d32,\n  //     tableValues.f32,\n  //     tableValues.d34,\n  //     tableValues.d35,\n  //     tableValues.d36,\n  //     tableValues.d37,\n  //     tableValues.d38,\n  //     tableValues.d39,\n  //     tableValues.d49,\n  //     tableValues.e49,\n  //     tableValues.d23,\n  //     tableValues.d48,\n  //     tableValues.d52,\n  //     tableValues.e48,\n  //     tableValues.e52,\n  //     tableValues.d47,\n  //     tableValues.e47\n  // ]\n\n  const renderTableData = () => {\n    if (!data) return __jsx(NoDataTableCell, {\n      className: classes.TableCell\n    });\n    return data.map((row, i) => {\n      return __jsx(TableRow, {\n        key: i\n      }, __jsx(TableCell, {\n        align: \"left\",\n        className: classes.TableCell\n      }, row.name), row.units && __jsx(TableCell, {\n        align: \"left\"\n      }, row.units), row.fields ? row.fields.map(field => {\n        return __jsx(TableCell, {\n          key: field.location,\n          align: \"left\"\n        }, renderValueType(field, updateTablesValues, tableValues, classes));\n      }) : __jsx(TableCell, {\n        align: \"left\"\n      }, renderValueType(row, updateTablesValues, tableValues, classes)));\n    });\n  };\n\n  return __jsx(Paper, {\n    className: classes.root\n  }, __jsx(Table, {\n    className: classes.table\n  }, __jsx(TableHead, null, tableTitle && __jsx(TableTitle, {\n    className: classes.tableTitle,\n    tableTitle: tableTitle\n  }), waterAnalysisTitle && __jsx(WaterAnalysisTitle, {\n    value: tableValues['e30'] || '',\n    handleInputChange: e => handleInputChange(e, updateTablesValues, tableValues)\n  }), headerCols && __jsx(HeaderCols, {\n    data: headerCols\n  })), __jsx(TableBody, null, renderTableData())));\n} // SimpleTable.defaultProps = {\n//     units: true\n// };\n// SimpleTable.propTypes = {\n//     units: PropTypes.bool\n// };\n\n\nexport default connect(SimpleTable);","map":{"version":3,"sources":["C:\\Users\\elad\\Desktop\\committed\\UET\\src\\components\\table\\Table.js"],"names":["React","useEffect","makeStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","renderValueType","handleInputChange","Input","TableTitle","HeaderCols","NoDataTableCell","WaterAnalysisTitle","PropTypes","connect","useStyles","theme","root","table","tableTitle","fontSize","textFieldUNEditable","background","SimpleTable","props","data","headerCols","tablesData","waterAnalysisTitle","actions","updateTablesValues","classes","tableValues","renderTableData","map","row","i","name","units","fields","field","location","e"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { renderValueType, handleInputChange } from './utils'\r\nimport Input from '@material-ui/core/Input';\r\nimport TableTitle from 'src/components/table/TableTitle'\r\nimport HeaderCols from 'src/components/table/HeaderCols'\r\nimport NoDataTableCell from 'src/components/table/NoDataTableCell'\r\nimport WaterAnalysisTitle from 'src/components/table/WaterAnalysisTitle'\r\nimport PropTypes from 'prop-types';\r\n// import { calculate } from 'src/components/data/tableUtils';\r\nimport connect from './connect'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        // width: '100%',\r\n        // marginTop: theme.spacing(3),\r\n        // overflowX: 'auto',\r\n    },\r\n    table: {\r\n        // width: 600,\r\n    },\r\n    tableTitle: {\r\n        fontSize: 20\r\n    },\r\n    TableCell: {\r\n\r\n    },\r\n    textFieldUNEditable: {\r\n        background: 'lightblue'\r\n    }\r\n}));\r\n\r\nfunction SimpleTable(props) {\r\n    const { data, headerCols, tableTitle, tablesData, waterAnalysisTitle, actions } = props\r\n    const { updateTablesValues } = actions\r\n    const classes = useStyles();\r\n\r\n    // console.log(`tablesData`, tablesData);\r\n\r\n    const tableValues = tablesData\r\n    // const influencingValues = [\r\n    //     tableValues.d10,\r\n    //     tableValues.d11,\r\n    //     tableValues.d21,\r\n    //     tableValues.d22,\r\n    //     tableValues.e30,\r\n    //     tableValues.d32,\r\n    //     tableValues.f32,\r\n    //     tableValues.d34,\r\n    //     tableValues.d35,\r\n    //     tableValues.d36,\r\n    //     tableValues.d37,\r\n    //     tableValues.d38,\r\n    //     tableValues.d39,\r\n    //     tableValues.d49,\r\n    //     tableValues.e49,\r\n    //     tableValues.d23,\r\n    //     tableValues.d48,\r\n    //     tableValues.d52,\r\n    //     tableValues.e48,\r\n    //     tableValues.e52,\r\n    //     tableValues.d47,\r\n    //     tableValues.e47\r\n    // ]\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const renderTableData = () => {\r\n        if (!data) return <NoDataTableCell className={classes.TableCell} />\r\n        return data.map((row, i) => {\r\n            return <TableRow key={i}>\r\n                <TableCell align=\"left\" className={classes.TableCell}>\r\n                    {row.name}\r\n                </TableCell>\r\n\r\n                {row.units &&\r\n                    <TableCell align=\"left\">\r\n                        {row.units}\r\n                    </TableCell>}\r\n\r\n                {row.fields\r\n                    ? row.fields.map((field) => {\r\n                        return <TableCell key={field.location} align=\"left\">\r\n                            {renderValueType(field, updateTablesValues, tableValues, classes)}\r\n                        </TableCell>\r\n                    })\r\n                    : <TableCell align=\"left\">{renderValueType(row, updateTablesValues, tableValues, classes)}</TableCell>\r\n                }\r\n            </TableRow>\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <Table className={classes.table}>\r\n                <TableHead>\r\n                    {tableTitle && <TableTitle className={classes.tableTitle} tableTitle={tableTitle} />}\r\n                    {/* happens only in Water Analysis table */}\r\n                    {waterAnalysisTitle\r\n                        && <WaterAnalysisTitle value={tableValues['e30'] || ''}\r\n                            handleInputChange={(e) => handleInputChange(e, updateTablesValues, tableValues)} />}\r\n                    {/* ---- */}\r\n                    {headerCols && <HeaderCols data={headerCols} />}\r\n                </TableHead>\r\n                <TableBody>\r\n                    {renderTableData()}\r\n                </TableBody>\r\n            </Table>\r\n        </Paper>\r\n    );\r\n}\r\n\r\n// SimpleTable.defaultProps = {\r\n//     units: true\r\n// };\r\n\r\n// SimpleTable.propTypes = {\r\n//     units: PropTypes.bool\r\n// };\r\n\r\nexport default connect(SimpleTable)"]},"metadata":{},"sourceType":"module"}