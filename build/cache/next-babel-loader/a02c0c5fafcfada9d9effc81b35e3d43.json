{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport { all, call } from 'redux-saga/effects';\nimport tablesWatcher from \"./tables/watcher\";\n\nfunction rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([call(tablesWatcher, 'tablesWatcher')]);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nexport default rootSaga;","map":{"version":3,"sources":["C:\\Users\\elad\\Desktop\\committed\\UET\\src\\store\\rootSaga.js"],"names":["rootSaga","all","call","tablesWatcher"],"mappings":";;;;yBAGUA,Q;;AAHV,SAASC,GAAT,EAAcC,IAAd,QAA0B,oBAA1B;AACA,OAAOC,aAAP;;AAEA,SAAUH,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMC,GAAG,CAAC,CACRC,IAAI,CAACC,aAAD,EAAgB,eAAhB,CADI,CAAD,CAAT;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA,eAAeH,QAAf","sourcesContent":["import { all, call } from 'redux-saga/effects';\r\nimport tablesWatcher from 'src/store/tables/watcher';\r\n\r\nfunction* rootSaga() {\r\n  yield all([\r\n    call(tablesWatcher, 'tablesWatcher')\r\n  ]);\r\n}\r\n\r\nexport default rootSaga;\r\n"]},"metadata":{},"sourceType":"module"}