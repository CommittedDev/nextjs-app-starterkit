{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3) // overflowX: 'auto',\n\n  },\n  table: {\n    width: 300\n  }\n}));\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein\n  };\n}\n\nconst rows = [createData('Frozen yoghurt', 159, 6.0, 24, 4.0), createData('Ice cream sandwich', 237, 9.0, 37, 4.3), createData('Eclair', 262, 16.0, 24, 6.0), createData('Cupcake', 305, 3.7, 67, 4.3), createData('Gingerbread', 356, 16.0, 49, 3.9)];\nexport default function SimpleTable() {\n  const classes = useStyles();\n  return __jsx(Paper, {\n    className: classes.root\n  }, __jsx(Table, {\n    className: classes.table\n  }, __jsx(TableHead, null, __jsx(TableRow, null, __jsx(TableCell, {\n    align: \"left\"\n  }, \"Dessert (100g serving)\"), __jsx(TableCell, {\n    align: \"left\"\n  }, \"Calories\"), __jsx(TableCell, {\n    align: \"left\"\n  }, \"Fat\\xA0(g)\"))), __jsx(TableBody, null, rows.map(row => __jsx(TableRow, {\n    key: row.name\n  }, __jsx(TableCell, {\n    align: \"left\"\n  }, row.name), __jsx(TableCell, {\n    align: \"left\"\n  }, row.carbs), __jsx(TableCell, {\n    align: \"left\"\n  }, row.protein))))));\n}","map":{"version":3,"sources":["C:\\Users\\elad\\Desktop\\committed\\UET\\src\\components\\Table.js"],"names":["React","makeStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","useStyles","theme","root","width","marginTop","spacing","table","createData","name","calories","fat","carbs","protein","rows","SimpleTable","classes","map","row"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAEA,MAAMC,SAAS,GAAGP,UAAU,CAACQ,KAAK,KAAK;AACnCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,MADL;AAEFC,IAAAA,SAAS,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,CAFT,CAGF;;AAHE,GAD6B;AAMnCC,EAAAA,KAAK,EAAE;AACHH,IAAAA,KAAK,EAAE;AADJ;AAN4B,CAAL,CAAN,CAA5B;;AAWA,SAASI,UAAT,CAAoBC,IAApB,EAA0BC,QAA1B,EAAoCC,GAApC,EAAyCC,KAAzC,EAAgDC,OAAhD,EAAyD;AACrD,SAAO;AAAEJ,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA,GAAlB;AAAuBC,IAAAA,KAAvB;AAA8BC,IAAAA;AAA9B,GAAP;AACH;;AAED,MAAMC,IAAI,GAAG,CACTN,UAAU,CAAC,gBAAD,EAAmB,GAAnB,EAAwB,GAAxB,EAA6B,EAA7B,EAAiC,GAAjC,CADD,EAETA,UAAU,CAAC,oBAAD,EAAuB,GAAvB,EAA4B,GAA5B,EAAiC,EAAjC,EAAqC,GAArC,CAFD,EAGTA,UAAU,CAAC,QAAD,EAAW,GAAX,EAAgB,IAAhB,EAAsB,EAAtB,EAA0B,GAA1B,CAHD,EAITA,UAAU,CAAC,SAAD,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,EAAtB,EAA0B,GAA1B,CAJD,EAKTA,UAAU,CAAC,aAAD,EAAgB,GAAhB,EAAqB,IAArB,EAA2B,EAA3B,EAA+B,GAA/B,CALD,CAAb;AAQA,eAAe,SAASO,WAAT,GAAuB;AAClC,QAAMC,OAAO,GAAGf,SAAS,EAAzB;AAEA,SACI,MAAC,KAAD;AAAO,IAAA,SAAS,EAAEe,OAAO,CAACb;AAA1B,KACI,MAAC,KAAD;AAAO,IAAA,SAAS,EAAEa,OAAO,CAACT;AAA1B,KACI,MAAC,SAAD,QACI,MAAC,QAAD,QACI,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC;AAAjB,8BADJ,EAEI,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC;AAAjB,gBAFJ,EAGI,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC;AAAjB,kBAHJ,CADJ,CADJ,EASI,MAAC,SAAD,QACKO,IAAI,CAACG,GAAL,CAASC,GAAG,IACT,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,GAAG,CAACT;AAAnB,KACI,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC;AAAjB,KACKS,GAAG,CAACT,IADT,CADJ,EAII,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC;AAAjB,KAAyBS,GAAG,CAACN,KAA7B,CAJJ,EAKI,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC;AAAjB,KAAyBM,GAAG,CAACL,OAA7B,CALJ,CADH,CADL,CATJ,CADJ,CADJ;AAyBH","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3),\r\n        // overflowX: 'auto',\r\n    },\r\n    table: {\r\n        width: 300,\r\n    },\r\n}));\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n    return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n    createData('Eclair', 262, 16.0, 24, 6.0),\r\n    createData('Cupcake', 305, 3.7, 67, 4.3),\r\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nexport default function SimpleTable() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <Table className={classes.table}>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell align=\"left\">Dessert (100g serving)</TableCell>\r\n                        <TableCell align=\"left\">Calories</TableCell>\r\n                        <TableCell align=\"left\">Fat&nbsp;(g)</TableCell>\r\n                       \r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rows.map(row => (\r\n                        <TableRow key={row.name}>\r\n                            <TableCell align=\"left\">\r\n                                {row.name}\r\n                            </TableCell>\r\n                            <TableCell align=\"left\">{row.carbs}</TableCell>\r\n                            <TableCell align=\"left\">{row.protein}</TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </Paper>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}