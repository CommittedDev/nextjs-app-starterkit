{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { TYPES } from \"./data\";\nconst useStyles = makeStyles(theme => ({\n  root: {// width: '100%',\n    // marginTop: theme.spacing(3),\n    // overflowX: 'auto',\n  },\n  table: {// width: 600,\n  },\n  tableTitle: {\n    fontSize: 20\n  }\n}));\nexport default function SimpleTable(props) {\n  const {\n    tableTitle,\n    data\n  } = props;\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    name: 'Cat in the Hat',\n    age: '',\n    multiline: 'Controlled',\n    currency: 'EUR'\n  });\n\n  const handleChange = name => event => {\n    debugger;\n    setValues(_objectSpread({}, values, {\n      [name]: event.target.value\n    }));\n  };\n\n  const renderValueType = row => {\n    switch (row.type) {\n      case TYPES.NUMERIC:\n        return __jsx(TextField, {\n          id: \"stasdsdandard-numberasdasdasdsadsasadasd\",\n          label: \"Number\",\n          value: values.age,\n          onChange: handleChange('val'),\n          type: \"number\",\n          className: classes.textField,\n          InputLabelProps: {\n            shrink: true\n          },\n          margin: \"normal\"\n        });\n\n      case TYPES.RANGE:\n        return;\n\n      case TYPES.SELECT:\n        return;\n\n      default:\n        return row.type;\n    }\n  };\n\n  const renderTableData = () => {\n    if (!data) return __jsx(\"div\", null, \"no data\");\n    return data.map(row => __jsx(TableRow, {\n      key: row.name\n    }, __jsx(TableCell, {\n      align: \"left\"\n    }, row.name), __jsx(TableCell, {\n      align: \"left\"\n    }, row.value), __jsx(TableCell, {\n      align: \"left\"\n    }, renderValueType(row))));\n  };\n\n  console.log('data', data);\n  return __jsx(Paper, {\n    className: classes.root\n  }, __jsx(Table, {\n    className: classes.table\n  }, __jsx(TableHead, null, __jsx(TableRow, null, __jsx(TableCell, {\n    className: classes.tableTitle,\n    align: \"left\"\n  }, tableTitle), __jsx(TableCell, {\n    align: \"left\"\n  }, \"Value\"), __jsx(TableCell, {\n    align: \"left\"\n  }, \"Units\"))), __jsx(TableBody, null, renderTableData())));\n}","map":{"version":3,"sources":["C:\\Users\\elad\\Desktop\\committed\\UET\\src\\components\\Table.js"],"names":["React","makeStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","TYPES","useStyles","theme","root","table","tableTitle","fontSize","SimpleTable","props","data","classes","values","setValues","useState","name","age","multiline","currency","handleChange","event","target","value","renderValueType","row","type","NUMERIC","textField","shrink","RANGE","SELECT","renderTableData","map","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { TYPES } from 'src/components/data'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        // width: '100%',\r\n        // marginTop: theme.spacing(3),\r\n        // overflowX: 'auto',\r\n    },\r\n    table: {\r\n        // width: 600,\r\n    },\r\n    tableTitle: {\r\n        fontSize: 20\r\n    }\r\n}));\r\n\r\n\r\nexport default function SimpleTable(props) {\r\n    const { tableTitle, data } = props\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        name: 'Cat in the Hat',\r\n        age: '',\r\n        multiline: 'Controlled',\r\n        currency: 'EUR',\r\n    });\r\n\r\n    const handleChange = name => event => {\r\n        debugger\r\n        setValues({ ...values, [name]: event.target.value });\r\n    };\r\n\r\n\r\n    const renderValueType = (row) => {\r\n        switch (row.type) {\r\n            case TYPES.NUMERIC:\r\n                return <TextField\r\n                    id=\"stasdsdandard-numberasdasdasdsadsasadasd\"\r\n                    label=\"Number\"\r\n                    value={values.age}\r\n                    onChange={handleChange('val')}\r\n                    type=\"number\"\r\n                    className={classes.textField}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    margin=\"normal\"\r\n                />\r\n            case TYPES.RANGE:\r\n                return;\r\n            case TYPES.SELECT:\r\n                return;\r\n\r\n\r\n            default:\r\n                return row.type\r\n        }\r\n    }\r\n\r\n    const renderTableData = () => {\r\n        if (!data) return <div>no data</div>\r\n        return data.map(row => (\r\n            <TableRow key={row.name}>\r\n                <TableCell align=\"left\">\r\n                    {row.name}\r\n                </TableCell>\r\n                <TableCell align=\"left\">{row.value}</TableCell>\r\n                <TableCell align=\"left\">{renderValueType(row)}</TableCell>\r\n            </TableRow>\r\n        ))\r\n    }\r\n    console.log('data', data);\r\n\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <Table className={classes.table}>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell className={classes.tableTitle} align=\"left\">{tableTitle}</TableCell>\r\n                        <TableCell align=\"left\">Value</TableCell>\r\n                        <TableCell align=\"left\">Units</TableCell>\r\n\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {renderTableData()}\r\n                </TableBody>\r\n            </Table>\r\n        </Paper>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}