{"ast":null,"code":"const MANDATORY = true;\nconst NOT_MANDATORY = false;\nexport const TYPES = {\n  NUMERIC: 'NUMERIC',\n  RANGE: 'RANGE',\n  SELECT: 'SELECT',\n  NOT_EDITABLE: 'NOT_EDITABLE'\n};\n\nfunction getDefaultValue(type) {\n  let defaultValue = 0;\n\n  if (type === TYPES.SELECT) {\n    defaultValue = '';\n  }\n\n  return defaultValue;\n} //create tables with more than one values\n\n\nfunction createRowData(name, units, mandatory, fields) {\n  fields.forEach(field => {\n    field.defaultValue = getDefaultValue(field.type);\n  });\n  return {\n    name,\n    units,\n    mandatory,\n    fields\n  };\n}\n\nexport const mechanicalPropertiesData = [createRowData('Number of CT (interconnected)', '# (interconnected cooling towers)', MANDATORY, [{\n  location: 'd8',\n  type: TYPES.RANGE,\n  data: {\n    min: 0,\n    max: 10,\n    ticks: 1\n  }\n}]), createRowData('Number of Circulation Pumps', '#  (operational + standby) ', NOT_MANDATORY, [{\n  location: 'd9',\n  type: TYPES.RANGE,\n  data: {\n    min: 0,\n    max: 10,\n    ticks: 1\n  }\n}]), createRowData('Total pumps flow rate capacity', 'm3/h', NOT_MANDATORY, [{\n  location: 'd10',\n  type: TYPES.RANGE,\n  data: {\n    min: 0,\n    max: 50,\n    ticks: 1\n  }\n}]), createRowData('Actual cooling circulation flow rate', 'm3/h', NOT_MANDATORY, [{\n  location: 'd11',\n  type: TYPES.NUMERIC\n}]), createRowData('Available flowrate for UET units', 'm3/h', MANDATORY, [{\n  location: 'd12',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('Total Basin volume (with equation line)', 'm3', NOT_MANDATORY, [{\n  location: 'd13',\n  type: TYPES.RANGE,\n  data: {\n    min: 0,\n    max: 10,\n    ticks: 1\n  }\n}]), createRowData('Pipe length from CT to H.Ex. (approx.)', 'meters', MANDATORY, [{\n  location: 'd14',\n  type: TYPES.NUMERIC\n}]), createRowData('type of fluid to be chilled', 'Water/Ammonia/Freon/Ethylene-glycol', MANDATORY, [{\n  location: 'd15',\n  type: TYPES.SELECT,\n  data: ['', 'Water', 'Ammonia', 'Freon', 'Ethylene-glycol']\n}]), createRowData('Cooling Tower type', 'external heat exchanger/evaporator - condenser*/direct contact', MANDATORY, [{\n  location: 'd16',\n  type: TYPES.SELECT,\n  data: ['', 'external heat exchanger', 'evaporator - condenser*', 'direct contact']\n}])]; //\n\nexport const operationalPropertiesData = [createRowData('CWR - Cooling Water Return temperature', 'oC', MANDATORY, [{\n  location: 'd21',\n  type: TYPES.RANGE,\n  data: {\n    min: 0,\n    max: 40,\n    ticks: 3\n  }\n}]), createRowData('CWS - Cooling Water Supply temperature', 'oC', MANDATORY, [{\n  location: 'd22',\n  type: TYPES.RANGE,\n  data: {\n    min: 0,\n    max: 40,\n    ticks: 2\n  }\n}]), createRowData('Temperature difference', 'oC', NOT_MANDATORY, [{\n  location: 'd23',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('Skin Temp. (highest in the system) ', 'oC', MANDATORY, [{\n  location: 'd24',\n  type: TYPES.RANGE,\n  data: {\n    min: 0,\n    max: 100,\n    ticks: 10\n  }\n}]), createRowData('Days of week in operation', 'days per week', MANDATORY, [{\n  location: 'd25',\n  type: TYPES.RANGE,\n  data: {\n    min: 0,\n    max: 7,\n    ticks: 1\n  }\n}]), createRowData('Hours/day in operation)', 'hours per day', MANDATORY, [{\n  location: 'd26',\n  type: TYPES.RANGE,\n  data: {\n    min: 0,\n    max: 24,\n    ticks: 1\n  }\n}]), createRowData('# weeks in operation', 'weeks per year', MANDATORY, [{\n  location: 'd27',\n  type: TYPES.NOT_EDITABLE\n}])];\nexport const waterOriginData = [createRowData('Water Source', 'Public/Well/River/Reuse', MANDATORY, [{\n  location: 'j8',\n  type: TYPES.SELECT,\n  data: ['', 'Public', 'Well', 'River', 'Reuse']\n}]), createRowData('Water Cost', '$USD / m3', MANDATORY, [{\n  location: 'j9',\n  type: TYPES.NUMERIC\n}]), createRowData('Drain Cost', '$USD / m3', MANDATORY, [{\n  location: 'j10',\n  type: TYPES.NUMERIC\n}])];\nexport const operationCostsData = [createRowData('Chemical costs', '$USD/year', MANDATORY, [{\n  location: 'j13',\n  type: TYPES.NUMERIC\n}]), createRowData('Elecrtricity Cost', '$USD/kWH', MANDATORY, [{\n  location: 'j14',\n  type: TYPES.NUMERIC\n}]), createRowData('# plant stoppages due to blockages', '#/year', MANDATORY, [{\n  location: 'j15',\n  type: TYPES.NUMERIC\n}]), createRowData('Thickness of scaling in heat exhanger', 'mm', MANDATORY, [{\n  location: 'j16',\n  type: TYPES.NUMERIC\n}]), createRowData('Cost of  cleaning of heat exchanger', '$USD/year', MANDATORY, [{\n  location: 'j17',\n  type: TYPES.NUMERIC\n}])];\nexport const enironmentalData = [createRowData('Discharge limitations', 'Chlorides (ppm)', MANDATORY, [{\n  location: 'j20',\n  type: TYPES.NUMERIC\n}]), createRowData('Discharge limitations', 'Sulfates (ppm)', MANDATORY, [{\n  location: 'j21',\n  type: TYPES.NUMERIC\n}]), createRowData('Discharge limitations', 'pH', MANDATORY, [{\n  location: 'j22',\n  type: TYPES.NUMERIC\n}]), createRowData('Discharge limitations', 'Chlorine (ppm)', MANDATORY, [{\n  location: 'j23',\n  type: TYPES.NUMERIC\n}]), createRowData('Water Source', 'Yes/No', MANDATORY, [{\n  location: 'j24',\n  type: TYPES.SELECT,\n  data: ['', 'Yes', 'No']\n}]), createRowData('Water Source', 'Yes/No', MANDATORY, [{\n  location: 'j25',\n  type: TYPES.SELECT,\n  data: ['', 'Yes', 'No']\n}])];\nexport const customersProblemsAndRequestsData = [createRowData('Water Conservation', null, MANDATORY, [{\n  location: 'i29',\n  type: TYPES.SELECT,\n  data: ['', 'Yes', 'No']\n}]), createRowData('Energy Savings', null, MANDATORY, [{\n  location: 'i30',\n  type: TYPES.SELECT,\n  data: ['', 'Yes', 'No']\n}]), createRowData('Bio-contamination problems', null, MANDATORY, [{\n  location: 'i31',\n  type: TYPES.SELECT,\n  data: ['', 'Yes', 'No']\n}]), createRowData('Scale Precipitation problems', null, MANDATORY, [{\n  location: 'i32',\n  type: TYPES.SELECT,\n  data: ['', 'Yes', 'No']\n}]), createRowData('Silica Related Problems', null, MANDATORY, [{\n  location: 'i33',\n  type: TYPES.SELECT,\n  data: ['', 'Yes', 'No']\n}]), createRowData('Chemical Elimination', null, MANDATORY, [{\n  location: 'i34',\n  type: TYPES.SELECT,\n  data: ['', 'Yes', 'No']\n}])];\nexport const waterAnalysisData = [createRowData('Conductivity', 'µS/cm', MANDATORY, [{\n  location: 'd32',\n  type: TYPES.NUMERIC\n}, {\n  location: 'e32',\n  type: TYPES.NOT_EDITABLE\n}, {\n  location: 'f32',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('pH', 'Units', MANDATORY, [{\n  location: 'd33',\n  type: TYPES.NUMERIC\n}, {\n  location: 'e33',\n  type: TYPES.NUMERIC\n}, {\n  location: 'f33',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('Total Hardness', 'ppm as CaCO3', MANDATORY, [{\n  location: 'd34',\n  type: TYPES.NUMERIC\n}, {\n  location: 'e34',\n  type: TYPES.NUMERIC\n}, {\n  location: 'f34',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('Carbonate Hardness', 'ppm as CaCO3', MANDATORY, [{\n  location: 'd35',\n  type: TYPES.NUMERIC\n}, {\n  location: 'e35',\n  type: TYPES.NUMERIC\n}, {\n  location: 'f35',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('Chlorides', 'ppm', MANDATORY, [{\n  location: 'd36',\n  type: TYPES.NUMERIC\n}, {\n  location: 'e36',\n  type: TYPES.NUMERIC\n}, {\n  location: 'f36',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('Iron', 'ppm', MANDATORY, [{\n  location: 'd37',\n  type: TYPES.NUMERIC\n}, {\n  location: 'e37',\n  type: TYPES.NUMERIC\n}, {\n  location: 'f37',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('Silica', 'ppm', MANDATORY, [{\n  location: 'd38',\n  type: TYPES.NUMERIC\n}, {\n  location: 'e38',\n  type: TYPES.NUMERIC\n}, {\n  location: 'f38',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('Sulphate', 'ppm', MANDATORY, [{\n  location: 'd39',\n  type: TYPES.NUMERIC\n}, {\n  location: 'e39',\n  type: TYPES.NUMERIC\n}, {\n  location: 'f39',\n  type: TYPES.NOT_EDITABLE\n}])];\nexport const thermodynamicCalculationsData = [createRowData('UET treatment cycles of concentration', '#', MANDATORY, [{\n  location: 'd47',\n  type: TYPES.NOT_EDITABLE\n}, {\n  location: 'e47',\n  type: TYPES.NUMERIC\n}]), createRowData('Evaporation Rate', 'm3/h', MANDATORY, [{\n  location: 'd48',\n  type: TYPES.NOT_EDITABLE\n}, {\n  location: 'e48',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('Condenser capacity', 'Kcal/hour', MANDATORY, [{\n  location: 'd49',\n  type: TYPES.NOT_EDITABLE\n}, {\n  location: 'e49',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('Tons of refrigeration', 'TR', MANDATORY, [{\n  location: 'd50',\n  type: TYPES.NOT_EDITABLE\n}, {\n  location: 'e50',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('Make up flow rate', 'm3/h', MANDATORY, [{\n  location: 'd51',\n  type: TYPES.NOT_EDITABLE\n}, {\n  location: 'e51',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('Blowdown flow rate', 'm3/h', MANDATORY, [{\n  location: 'd52',\n  type: TYPES.NOT_EDITABLE\n}, {\n  location: 'e52',\n  type: TYPES.NOT_EDITABLE\n}])];\nexport const potentialWaterSavingData = [createRowData('Calculated Water Saving (m3/h)', null, MANDATORY, [{\n  location: 'c55',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('Annual Hourly Operation(h/year)', null, MANDATORY, [{\n  location: 'c56',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('*Annual Water Saving  (m3/year)', null, MANDATORY, [{\n  location: 'c57',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('% of water saving from blowdown', null, MANDATORY, [{\n  location: 'c58',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('% of water saving from make up', null, MANDATORY, [{\n  location: 'c59',\n  type: TYPES.NOT_EDITABLE\n}])];\nexport const predictiveWaterAnalysis = [createRowData('Conductivity', 'µS/cm', MANDATORY, [{\n  location: 'd63',\n  type: TYPES.NOT_EDITABLE\n}, {\n  location: 'e63',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('pH', 'Units', MANDATORY, [{\n  location: 'd64',\n  type: TYPES.NOT_EDITABLE\n}, {\n  location: 'e64',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('Total Hardness', 'ppm as CaCO3', MANDATORY, [{\n  location: 'd65',\n  type: TYPES.NOT_EDITABLE\n}, {\n  location: 'e65',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('Carbonate Hardness', 'ppm as CaCO3', MANDATORY, [{\n  location: 'd66',\n  type: TYPES.NOT_EDITABLE\n}, {\n  location: 'e66',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('Chlorides', 'ppm', MANDATORY, [{\n  location: 'd67',\n  type: TYPES.NOT_EDITABLE\n}, {\n  location: 'e67',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('Iron', 'ppm', MANDATORY, [{\n  location: 'd68',\n  type: TYPES.NOT_EDITABLE\n}, {\n  location: 'e68',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('Silica', 'ppm', MANDATORY, [{\n  location: 'd69',\n  type: TYPES.NOT_EDITABLE\n}, {\n  location: 'e69',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('Sulphate', 'ppm', MANDATORY, [{\n  location: 'd70',\n  type: TYPES.NOT_EDITABLE\n}, {\n  location: 'e70',\n  type: TYPES.NOT_EDITABLE\n}])];\nexport const sizingFactorsData = [createRowData('Silica Factor', '>15', MANDATORY, [{\n  location: 'j47',\n  type: TYPES.NOT_EDITABLE\n}, {\n  location: 'l47',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('Hardness Factor', '>250', MANDATORY, [{\n  location: 'j48',\n  type: TYPES.NOT_EDITABLE\n}, {\n  location: 'l48',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('Ammonia Factor', '>300', MANDATORY, [{\n  location: 'j49',\n  type: TYPES.NOT_EDITABLE\n}, {\n  location: 'l49',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('Freon Factor', 'Ammonia', MANDATORY, [{\n  location: 'j50',\n  type: TYPES.NOT_EDITABLE\n}, {\n  location: 'l50',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('pPipe Length Factor', 'Freon', MANDATORY, [{\n  location: 'j51',\n  type: TYPES.NOT_EDITABLE\n}, {\n  location: 'l51',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('Pipe Length Factor', '>100', MANDATORY, [{\n  location: 'j52',\n  type: TYPES.NOT_EDITABLE\n}, {\n  location: 'l52',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('Evaporator - condenser Factor', 'Evaporator - condenser', MANDATORY, [{\n  location: 'j53',\n  type: TYPES.NOT_EDITABLE\n}, {\n  location: 'l53',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('High Silica and low chlorides', 'Cl<50 & Si>50', MANDATORY, [{\n  location: 'j54',\n  type: TYPES.NOT_EDITABLE\n}, {\n  location: 'l54',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('Skin Temp.', '>60', MANDATORY, [{\n  location: 'j55',\n  type: TYPES.NOT_EDITABLE\n}, {\n  location: 'l55',\n  type: TYPES.NOT_EDITABLE\n}])];\nexport const sizingOfReactorsData = [createRowData('Sizing (# of Reactors)', null, MANDATORY, [{\n  location: 'i58',\n  type: TYPES.NOT_EDITABLE\n}])];\nexport const modelConfigurationData = [createRowData('1X4', null, MANDATORY, [{\n  location: 'i62',\n  type: TYPES.NOT_EDITABLE\n}, {\n  location: 'j62',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('2X4', null, MANDATORY, [{\n  location: 'i63',\n  type: TYPES.NOT_EDITABLE\n}, {\n  location: 'j63',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('4X4', null, MANDATORY, [{\n  location: 'i64',\n  type: TYPES.NOT_EDITABLE\n}, {\n  location: 'j64',\n  type: TYPES.NOT_EDITABLE\n}])];\nexport const UETCirculationFlowrateData = [createRowData('minimum flow rate', null, MANDATORY, [{\n  location: 'i68',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('maximum flow rate', null, MANDATORY, [{\n  location: 'i69',\n  type: TYPES.NOT_EDITABLE\n}])]; // Savings Calculation\n\nexport const theoreticalEnergySavingsData = [createRowData('Electricity Cost', '$USD/kWH', MANDATORY, [{\n  location: 'd79',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('Scale Deposit Thickness', 'mm', MANDATORY, [{\n  location: 'd80',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('Efficiency Loss', '%', MANDATORY, [{\n  location: 'd81',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('Total Theoretical Energy Savings', '$USD/Year', MANDATORY, [{\n  location: 'd82',\n  type: TYPES.NOT_EDITABLE\n}])];\nexport const ROICalculationData = [createRowData('Potential Water Savings', '$USD/Year', MANDATORY, [{\n  location: 'd85',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('Potential Energy Savings', '$USD/Year', MANDATORY, [{\n  location: 'd86',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('Chemical Savings', '$USD/Year', MANDATORY, [{\n  location: 'd87',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('Equipment Life efficiency savings', '$USD/Year', MANDATORY, [{\n  location: 'd88',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('Costs for cleaning heat exhanger', '$USD/Year', MANDATORY, [{\n  location: 'd89',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('Total Potential Savings ', '$USD/Year', MANDATORY, [{\n  location: 'd91',\n  type: TYPES.NOT_EDITABLE\n}])];\nexport const UETWorkingParameters = [createRowData('Approx. Electricity Consumption', 'kWH', MANDATORY, [{\n  location: 'j79',\n  type: TYPES.NOT_EDITABLE\n}]), createRowData('Approx. Footprint area (inc. service)', 'm2', MANDATORY, [{\n  location: 'j80',\n  type: TYPES.NOT_EDITABLE\n}])];","map":{"version":3,"sources":["C:\\Users\\elad\\Desktop\\committed\\UET\\src\\components\\data\\index.js"],"names":["MANDATORY","NOT_MANDATORY","TYPES","NUMERIC","RANGE","SELECT","NOT_EDITABLE","getDefaultValue","type","defaultValue","createRowData","name","units","mandatory","fields","forEach","field","mechanicalPropertiesData","location","data","min","max","ticks","operationalPropertiesData","waterOriginData","operationCostsData","enironmentalData","customersProblemsAndRequestsData","waterAnalysisData","thermodynamicCalculationsData","potentialWaterSavingData","predictiveWaterAnalysis","sizingFactorsData","sizingOfReactorsData","modelConfigurationData","UETCirculationFlowrateData","theoreticalEnergySavingsData","ROICalculationData","UETWorkingParameters"],"mappings":"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","sourcesContent":["const MANDATORY = true\r\nconst NOT_MANDATORY = false\r\nexport const TYPES = {\r\n    NUMERIC: 'NUMERIC',\r\n    RANGE: 'RANGE',\r\n    SELECT: 'SELECT',\r\n    NOT_EDITABLE: 'NOT_EDITABLE',\r\n}\r\n\r\nfunction getDefaultValue(type) {\r\n    let defaultValue = 0\r\n    if (type === TYPES.SELECT) {\r\n        defaultValue = ''\r\n    }\r\n    return defaultValue\r\n}\r\n\r\n//create tables with more than one values\r\nfunction createRowData(name, units, mandatory, fields) {\r\n    fields.forEach(field => {\r\n        field.defaultValue = getDefaultValue(field.type)\r\n    })\r\n    return { name, units, mandatory, fields };\r\n}\r\n\r\nexport const mechanicalPropertiesData = [\r\n    createRowData('Number of CT (interconnected)', '# (interconnected cooling towers)', MANDATORY, [{ location: 'd8', type: TYPES.RANGE, data: { min: 0, max: 10, ticks: 1 } }]),\r\n    createRowData('Number of Circulation Pumps', '#  (operational + standby) ', NOT_MANDATORY, [{ location: 'd9', type: TYPES.RANGE, data: { min: 0, max: 10, ticks: 1 } }]),\r\n    createRowData('Total pumps flow rate capacity', 'm3/h', NOT_MANDATORY, [{ location: 'd10', type: TYPES.RANGE, data: { min: 0, max: 50, ticks: 1 } }]),\r\n    createRowData('Actual cooling circulation flow rate', 'm3/h', NOT_MANDATORY, [{ location: 'd11', type: TYPES.NUMERIC }]),\r\n    createRowData('Available flowrate for UET units', 'm3/h', MANDATORY, [{ location: 'd12', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('Total Basin volume (with equation line)', 'm3', NOT_MANDATORY, [{ location: 'd13', type: TYPES.RANGE, data: { min: 0, max: 10, ticks: 1 } }]),\r\n    createRowData('Pipe length from CT to H.Ex. (approx.)', 'meters', MANDATORY, [{ location: 'd14', type: TYPES.NUMERIC }]),\r\n    createRowData('type of fluid to be chilled', 'Water/Ammonia/Freon/Ethylene-glycol', MANDATORY, [{ location: 'd15', type: TYPES.SELECT, data: ['', 'Water', 'Ammonia', 'Freon', 'Ethylene-glycol'] }]),\r\n    createRowData('Cooling Tower type', 'external heat exchanger/evaporator - condenser*/direct contact', MANDATORY, [{ location: 'd16', type: TYPES.SELECT, data: ['', 'external heat exchanger', 'evaporator - condenser*', 'direct contact'] }]),\r\n]//\r\nexport const operationalPropertiesData = [\r\n    createRowData('CWR - Cooling Water Return temperature', 'oC', MANDATORY, [{ location: 'd21', type: TYPES.RANGE, data: { min: 0, max: 40, ticks: 3 } }]),\r\n    createRowData('CWS - Cooling Water Supply temperature', 'oC', MANDATORY, [{ location: 'd22', type: TYPES.RANGE, data: { min: 0, max: 40, ticks: 2 } }]),\r\n    createRowData('Temperature difference', 'oC', NOT_MANDATORY, [{ location: 'd23', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('Skin Temp. (highest in the system) ', 'oC', MANDATORY, [{ location: 'd24', type: TYPES.RANGE, data: { min: 0, max: 100, ticks: 10 } }]),\r\n    createRowData('Days of week in operation', 'days per week', MANDATORY, [{ location: 'd25', type: TYPES.RANGE, data: { min: 0, max: 7, ticks: 1 } }]),\r\n    createRowData('Hours/day in operation)', 'hours per day', MANDATORY, [{ location: 'd26', type: TYPES.RANGE, data: { min: 0, max: 24, ticks: 1 } }]),\r\n    createRowData('# weeks in operation', 'weeks per year', MANDATORY, [{ location: 'd27', type: TYPES.NOT_EDITABLE }]),\r\n]\r\n\r\nexport const waterOriginData = [\r\n    createRowData('Water Source', 'Public/Well/River/Reuse', MANDATORY, [{ location: 'j8', type: TYPES.SELECT, data: ['', 'Public', 'Well', 'River', 'Reuse'] }]),\r\n    createRowData('Water Cost', '$USD / m3', MANDATORY, [{ location: 'j9', type: TYPES.NUMERIC }]),\r\n    createRowData('Drain Cost', '$USD / m3', MANDATORY, [{ location: 'j10', type: TYPES.NUMERIC }]),\r\n]\r\nexport const operationCostsData = [\r\n    createRowData('Chemical costs', '$USD/year', MANDATORY, [{ location: 'j13', type: TYPES.NUMERIC }]),\r\n    createRowData('Elecrtricity Cost', '$USD/kWH', MANDATORY, [{ location: 'j14', type: TYPES.NUMERIC }]),\r\n    createRowData('# plant stoppages due to blockages', '#/year', MANDATORY, [{ location: 'j15', type: TYPES.NUMERIC }]),\r\n    createRowData('Thickness of scaling in heat exhanger', 'mm', MANDATORY, [{ location: 'j16', type: TYPES.NUMERIC }]),\r\n    createRowData('Cost of  cleaning of heat exchanger', '$USD/year', MANDATORY, [{ location: 'j17', type: TYPES.NUMERIC }]),\r\n]\r\nexport const enironmentalData = [\r\n    createRowData('Discharge limitations', 'Chlorides (ppm)', MANDATORY, [{ location: 'j20', type: TYPES.NUMERIC }]),\r\n    createRowData('Discharge limitations', 'Sulfates (ppm)', MANDATORY, [{ location: 'j21', type: TYPES.NUMERIC }]),\r\n    createRowData('Discharge limitations', 'pH', MANDATORY, [{ location: 'j22', type: TYPES.NUMERIC }]),\r\n    createRowData('Discharge limitations', 'Chlorine (ppm)', MANDATORY, [{ location: 'j23', type: TYPES.NUMERIC }]),\r\n    createRowData('Water Source', 'Yes/No', MANDATORY, [{ location: 'j24', type: TYPES.SELECT, data: ['', 'Yes', 'No'] }]),\r\n    createRowData('Water Source', 'Yes/No', MANDATORY, [{ location: 'j25', type: TYPES.SELECT, data: ['', 'Yes', 'No'] }]),\r\n]\r\nexport const customersProblemsAndRequestsData = [\r\n    createRowData('Water Conservation', null, MANDATORY, [{ location: 'i29', type: TYPES.SELECT, data: ['', 'Yes', 'No'] }]),\r\n    createRowData('Energy Savings', null, MANDATORY, [{ location: 'i30', type: TYPES.SELECT, data: ['', 'Yes', 'No'] }]),\r\n    createRowData('Bio-contamination problems', null, MANDATORY, [{ location: 'i31', type: TYPES.SELECT, data: ['', 'Yes', 'No'] }]),\r\n    createRowData('Scale Precipitation problems', null, MANDATORY, [{ location: 'i32', type: TYPES.SELECT, data: ['', 'Yes', 'No'] }]),\r\n    createRowData('Silica Related Problems', null, MANDATORY, [{ location: 'i33', type: TYPES.SELECT, data: ['', 'Yes', 'No'] }]),\r\n    createRowData('Chemical Elimination', null, MANDATORY, [{ location: 'i34', type: TYPES.SELECT, data: ['', 'Yes', 'No'] }]),\r\n]\r\n\r\n\r\nexport const waterAnalysisData = [\r\n    createRowData('Conductivity', 'µS/cm', MANDATORY, [{ location: 'd32', type: TYPES.NUMERIC }, { location: 'e32', type: TYPES.NOT_EDITABLE }, { location: 'f32', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('pH', 'Units', MANDATORY, [{ location: 'd33', type: TYPES.NUMERIC }, { location: 'e33', type: TYPES.NUMERIC }, { location: 'f33', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('Total Hardness', 'ppm as CaCO3', MANDATORY, [{ location: 'd34', type: TYPES.NUMERIC }, { location: 'e34', type: TYPES.NUMERIC }, { location: 'f34', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('Carbonate Hardness', 'ppm as CaCO3', MANDATORY, [{ location: 'd35', type: TYPES.NUMERIC }, { location: 'e35', type: TYPES.NUMERIC }, { location: 'f35', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('Chlorides', 'ppm', MANDATORY, [{ location: 'd36', type: TYPES.NUMERIC }, { location: 'e36', type: TYPES.NUMERIC }, { location: 'f36', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('Iron', 'ppm', MANDATORY, [{ location: 'd37', type: TYPES.NUMERIC }, { location: 'e37', type: TYPES.NUMERIC }, { location: 'f37', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('Silica', 'ppm', MANDATORY, [{ location: 'd38', type: TYPES.NUMERIC }, { location: 'e38', type: TYPES.NUMERIC }, { location: 'f38', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('Sulphate', 'ppm', MANDATORY, [{ location: 'd39', type: TYPES.NUMERIC }, { location: 'e39', type: TYPES.NUMERIC }, { location: 'f39', type: TYPES.NOT_EDITABLE }]),\r\n]\r\nexport const thermodynamicCalculationsData = [\r\n    createRowData('UET treatment cycles of concentration', '#', MANDATORY, [{ location: 'd47', type: TYPES.NOT_EDITABLE }, { location: 'e47', type: TYPES.NUMERIC }]),\r\n    createRowData('Evaporation Rate', 'm3/h', MANDATORY, [{ location: 'd48', type: TYPES.NOT_EDITABLE }, { location: 'e48', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('Condenser capacity', 'Kcal/hour', MANDATORY, [{ location: 'd49', type: TYPES.NOT_EDITABLE }, { location: 'e49', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('Tons of refrigeration', 'TR', MANDATORY, [{ location: 'd50', type: TYPES.NOT_EDITABLE }, { location: 'e50', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('Make up flow rate', 'm3/h', MANDATORY, [{ location: 'd51', type: TYPES.NOT_EDITABLE }, { location: 'e51', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('Blowdown flow rate', 'm3/h', MANDATORY, [{ location: 'd52', type: TYPES.NOT_EDITABLE }, { location: 'e52', type: TYPES.NOT_EDITABLE }]),\r\n]\r\nexport const potentialWaterSavingData = [\r\n    createRowData('Calculated Water Saving (m3/h)', null, MANDATORY, [{ location: 'c55', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('Annual Hourly Operation(h/year)', null, MANDATORY, [{ location: 'c56', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('*Annual Water Saving  (m3/year)', null, MANDATORY, [{ location: 'c57', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('% of water saving from blowdown', null, MANDATORY, [{ location: 'c58', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('% of water saving from make up', null, MANDATORY, [{ location: 'c59', type: TYPES.NOT_EDITABLE }]),\r\n]\r\nexport const predictiveWaterAnalysis = [\r\n    createRowData('Conductivity', 'µS/cm', MANDATORY, [{ location: 'd63', type: TYPES.NOT_EDITABLE }, { location: 'e63', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('pH', 'Units', MANDATORY, [{ location: 'd64', type: TYPES.NOT_EDITABLE }, { location: 'e64', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('Total Hardness', 'ppm as CaCO3', MANDATORY, [{ location: 'd65', type: TYPES.NOT_EDITABLE }, { location: 'e65', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('Carbonate Hardness', 'ppm as CaCO3', MANDATORY, [{ location: 'd66', type: TYPES.NOT_EDITABLE }, { location: 'e66', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('Chlorides', 'ppm', MANDATORY, [{ location: 'd67', type: TYPES.NOT_EDITABLE }, { location: 'e67', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('Iron', 'ppm', MANDATORY, [{ location: 'd68', type: TYPES.NOT_EDITABLE }, { location: 'e68', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('Silica', 'ppm', MANDATORY, [{ location: 'd69', type: TYPES.NOT_EDITABLE }, { location: 'e69', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('Sulphate', 'ppm', MANDATORY, [{ location: 'd70', type: TYPES.NOT_EDITABLE }, { location: 'e70', type: TYPES.NOT_EDITABLE }]),\r\n]\r\nexport const sizingFactorsData = [\r\n    createRowData('Silica Factor', '>15', MANDATORY, [{ location: 'j47', type: TYPES.NOT_EDITABLE }, { location: 'l47', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('Hardness Factor', '>250', MANDATORY, [{ location: 'j48', type: TYPES.NOT_EDITABLE }, { location: 'l48', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('Ammonia Factor', '>300', MANDATORY, [{ location: 'j49', type: TYPES.NOT_EDITABLE }, { location: 'l49', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('Freon Factor', 'Ammonia', MANDATORY, [{ location: 'j50', type: TYPES.NOT_EDITABLE }, { location: 'l50', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('pPipe Length Factor', 'Freon', MANDATORY, [{ location: 'j51', type: TYPES.NOT_EDITABLE }, { location: 'l51', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('Pipe Length Factor', '>100', MANDATORY, [{ location: 'j52', type: TYPES.NOT_EDITABLE }, { location: 'l52', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('Evaporator - condenser Factor', 'Evaporator - condenser', MANDATORY, [{ location: 'j53', type: TYPES.NOT_EDITABLE }, { location: 'l53', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('High Silica and low chlorides', 'Cl<50 & Si>50', MANDATORY, [{ location: 'j54', type: TYPES.NOT_EDITABLE }, { location: 'l54', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('Skin Temp.', '>60', MANDATORY, [{ location: 'j55', type: TYPES.NOT_EDITABLE }, { location: 'l55', type: TYPES.NOT_EDITABLE }]),\r\n]\r\n\r\nexport const sizingOfReactorsData = [\r\n    createRowData('Sizing (# of Reactors)', null, MANDATORY, [{ location: 'i58', type: TYPES.NOT_EDITABLE }]),\r\n]\r\n\r\nexport const modelConfigurationData = [\r\n    createRowData('1X4', null, MANDATORY, [{ location: 'i62', type: TYPES.NOT_EDITABLE }, { location: 'j62', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('2X4', null, MANDATORY, [{ location: 'i63', type: TYPES.NOT_EDITABLE }, { location: 'j63', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('4X4', null, MANDATORY, [{ location: 'i64', type: TYPES.NOT_EDITABLE }, { location: 'j64', type: TYPES.NOT_EDITABLE }]),\r\n]\r\nexport const UETCirculationFlowrateData = [\r\n    createRowData('minimum flow rate', null, MANDATORY, [{ location: 'i68', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('maximum flow rate', null, MANDATORY, [{ location: 'i69', type: TYPES.NOT_EDITABLE }]),\r\n]\r\n\r\n// Savings Calculation\r\n\r\nexport const theoreticalEnergySavingsData = [\r\n    createRowData('Electricity Cost', '$USD/kWH', MANDATORY, [{ location: 'd79', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('Scale Deposit Thickness', 'mm', MANDATORY, [{ location: 'd80', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('Efficiency Loss', '%', MANDATORY, [{ location: 'd81', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('Total Theoretical Energy Savings', '$USD/Year', MANDATORY, [{ location: 'd82', type: TYPES.NOT_EDITABLE }]),\r\n]\r\nexport const ROICalculationData = [\r\n    createRowData('Potential Water Savings', '$USD/Year', MANDATORY, [{ location: 'd85', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('Potential Energy Savings', '$USD/Year', MANDATORY, [{ location: 'd86', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('Chemical Savings', '$USD/Year', MANDATORY, [{ location: 'd87', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('Equipment Life efficiency savings', '$USD/Year', MANDATORY, [{ location: 'd88', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('Costs for cleaning heat exhanger', '$USD/Year', MANDATORY, [{ location: 'd89', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('Total Potential Savings ', '$USD/Year', MANDATORY, [{ location: 'd91', type: TYPES.NOT_EDITABLE }]),\r\n]\r\nexport const UETWorkingParameters = [\r\n    createRowData('Approx. Electricity Consumption', 'kWH', MANDATORY, [{ location: 'j79', type: TYPES.NOT_EDITABLE }]),\r\n    createRowData('Approx. Footprint area (inc. service)', 'm2', MANDATORY, [{ location: 'j80', type: TYPES.NOT_EDITABLE }]),\r\n]\r\n"]},"metadata":{},"sourceType":"module"}