{"ast":null,"code":"// import { notification } from 'antd';\nvar isProd = process.env.NODE_ENV === 'production';\nvar logger = {\n  error: function error(message, data) {\n    if (isProd) {// TODO: is a good place to send error to some logger service\n    } else {\n      console.error(message, data); //   notification.open({\n      //     message: 'Dev Mode Error Notification',\n      //     description: message + '\\n' + (data ? JSON.stringify(data) : '')\n      //   });\n    }\n\n    ;\n  },\n  info: function info(message) {\n    if (isProd) {// TODO: is a good place to send error to some logger service\n    } else {\n      console.info(message);\n    }\n\n    ;\n  },\n  warn: function warn(message, data) {\n    if (isProd) {// TODO: is a good place to send error to some logger service\n    } else {\n      console.warn(message, data); //   notification.open({\n      //     message: 'Dev Mode Warning Notification',\n      //     description: message + '\\n' + (data ? JSON.stringify(data) : '')\n      //   });\n    }\n\n    ;\n  },\n  debug: function debug(message, data) {\n    if (!isProd) {\n      console.debug('#debug -' + message, data || '');\n    }\n  }\n};\nexport default logger;","map":{"version":3,"sources":["C:\\Users\\elad\\Desktop\\committed\\UET\\src\\services\\logger\\logger.js"],"names":["isProd","process","env","NODE_ENV","logger","error","message","data","console","info","warn","debug"],"mappings":"AAAA;AACA,IAAMA,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAxC;AAEA,IAAMC,MAAM,GAAG;AACbC,EAAAA,KAAK,EAAE,eAACC,OAAD,EAAUC,IAAV,EAAmB;AACxB,QAAGP,MAAH,EAAW,CACT;AACD,KAFD,MAEK;AACHQ,MAAAA,OAAO,CAACH,KAAR,CAAcC,OAAd,EAAuBC,IAAvB,EADG,CAEL;AACA;AACA;AACA;AACC;;AAAA;AACF,GAXY;AAYbE,EAAAA,IAAI,EAAE,cAACH,OAAD,EAAa;AACjB,QAAGN,MAAH,EAAW,CACT;AACD,KAFD,MAEK;AACHQ,MAAAA,OAAO,CAACC,IAAR,CAAaH,OAAb;AACD;;AAAA;AACF,GAlBY;AAmBbI,EAAAA,IAAI,EAAE,cAACJ,OAAD,EAAUC,IAAV,EAAmB;AACvB,QAAGP,MAAH,EAAW,CACT;AACD,KAFD,MAEK;AACHQ,MAAAA,OAAO,CAACE,IAAR,CAAaJ,OAAb,EAAsBC,IAAtB,EADG,CAEL;AACA;AACA;AACA;AACC;;AAAA;AACF,GA7BY;AA8BbI,EAAAA,KAAK,EAAE,eAACL,OAAD,EAAUC,IAAV,EAAmB;AACxB,QAAG,CAACP,MAAJ,EAAY;AACVQ,MAAAA,OAAO,CAACG,KAAR,CAAc,aAAaL,OAA3B,EAAoCC,IAAI,IAAI,EAA5C;AACD;AACF;AAlCY,CAAf;AAqCA,eAAeH,MAAf","sourcesContent":["// import { notification } from 'antd';\r\nconst isProd = process.env.NODE_ENV === 'production'\r\n\r\nconst logger = {\r\n  error: (message, data) => {\r\n    if(isProd) {\r\n      // TODO: is a good place to send error to some logger service\r\n    }else{\r\n      console.error(message, data)\r\n    //   notification.open({\r\n    //     message: 'Dev Mode Error Notification',\r\n    //     description: message + '\\n' + (data ? JSON.stringify(data) : '')\r\n    //   });\r\n    };\r\n  },\r\n  info: (message) => {\r\n    if(isProd) {\r\n      // TODO: is a good place to send error to some logger service\r\n    }else{\r\n      console.info(message)\r\n    };\r\n  },\r\n  warn: (message, data) => {\r\n    if(isProd) {\r\n      // TODO: is a good place to send error to some logger service\r\n    }else{\r\n      console.warn(message, data)\r\n    //   notification.open({\r\n    //     message: 'Dev Mode Warning Notification',\r\n    //     description: message + '\\n' + (data ? JSON.stringify(data) : '')\r\n    //   });\r\n    };\r\n  },\r\n  debug: (message, data) => {\r\n    if(!isProd) {\r\n      console.debug('#debug -' + message, data || '')\r\n    }\r\n  }\r\n}\r\n\r\nexport default logger;"]},"metadata":{},"sourceType":"module"}