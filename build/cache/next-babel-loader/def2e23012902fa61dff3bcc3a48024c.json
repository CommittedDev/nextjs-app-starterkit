{"ast":null,"code":"const MANDATORY = true;\nconst NOT_MANDATORY = false;\nconst TYPES = {\n  NUMERIC: 'NUMERIC',\n  RANGE: 'RANGE',\n  SELECT: 'SELECT'\n};\n\nfunction createRangeData(name, value, mandatory, type, min, max, ticks) {\n  return {\n    name,\n    value,\n    mandatory,\n    type,\n    min,\n    max,\n    ticks\n  };\n}\n\nfunction createNumericData(name, value, mandatory, type) {\n  return {\n    name,\n    value,\n    mandatory,\n    type\n  };\n}\n\nfunction createSelectData(name, value, mandatory, type, data) {\n  return {\n    name,\n    value,\n    mandatory,\n    type,\n    data\n  };\n}\n\nexport const mechanicalProperties = [createRangeData('Number of CT (interconnected)', '# (interconnected cooling towers)', NOT_MANDATORY, TYPES.RANGE, 1, 10, 1), createRangeData('Number of Circulation Pumps', '#  (operational + standby) ', NOT_MANDATORY, TYPES.RANGE, 1, 20, 1), createRangeData('Total pumps flow rate capacity', 'm3/h', NOT_MANDATORY, TYPES.RANGE, 1, 50, 1), createNumericData('Actual cooling circulation flow rate', 'm3/h', NOT_MANDATORY, TYPES.NUMERIC), createNumericData('Available flowrate for UET units', 'm3/h', MANDATORY, TYPES.NUMERIC), createRangeData('Total Basin volume (with equation line)', 'm3', NOT_MANDATORY, TYPES.RANGE, 10, 200, 10), createNumericData('Pipe length from CT to H.Ex. (approx.)', 'meters', MANDATORY, TYPES.NUMERIC), createSelectData('type of fluid to be chilled', 'Water/Ammonia/Freon/Ethylene-glycol', MANDATORY, TYPES.SELECT, ['Water', 'Ammonia', 'Freon', 'Ethylene-glycol']), createSelectData('Cooling Tower type', 'external heat exchanger/evaporator - condenser*/direct contact', MANDATORY, TYPES.SELECT, ['external heat exchanger', 'evaporator - condenser*', 'direct contact'])];","map":{"version":3,"sources":["C:\\Users\\elad\\Desktop\\committed\\UET\\src\\components\\data\\index.js"],"names":["MANDATORY","NOT_MANDATORY","TYPES","NUMERIC","RANGE","SELECT","createRangeData","name","value","mandatory","type","min","max","ticks","createNumericData","createSelectData","data","mechanicalProperties"],"mappings":"AAAA,MAAMA,SAAS,GAAG,IAAlB;AACA,MAAMC,aAAa,GAAG,KAAtB;AACA,MAAMC,KAAK,GAAG;AACVC,EAAAA,OAAO,EAAE,SADC;AAEVC,EAAAA,KAAK,EAAE,OAFG;AAGVC,EAAAA,MAAM,EAAE;AAHE,CAAd;;AAOA,SAASC,eAAT,CAAyBC,IAAzB,EAA+BC,KAA/B,EAAsCC,SAAtC,EAAiDC,IAAjD,EAAuDC,GAAvD,EAA4DC,GAA5D,EAAiEC,KAAjE,EAAwE;AACpE,SAAO;AAAEN,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,SAAf;AAA0BC,IAAAA,IAA1B;AAAgCC,IAAAA,GAAhC;AAAqCC,IAAAA,GAArC;AAA0CC,IAAAA;AAA1C,GAAP;AACH;;AACD,SAASC,iBAAT,CAA2BP,IAA3B,EAAiCC,KAAjC,EAAwCC,SAAxC,EAAmDC,IAAnD,EAAyD;AACrD,SAAO;AAAEH,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,SAAf;AAA0BC,IAAAA;AAA1B,GAAP;AACH;;AACD,SAASK,gBAAT,CAA0BR,IAA1B,EAAgCC,KAAhC,EAAuCC,SAAvC,EAAkDC,IAAlD,EAAwDM,IAAxD,EAA8D;AAC1D,SAAO;AAAET,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,SAAf;AAA0BC,IAAAA,IAA1B;AAAgCM,IAAAA;AAAhC,GAAP;AACH;;AAED,OAAO,MAAMC,oBAAoB,GAAG,CAChCX,eAAe,CAAC,+BAAD,EAAkC,mCAAlC,EAAuEL,aAAvE,EAAsFC,KAAK,CAACE,KAA5F,EAAmG,CAAnG,EAAsG,EAAtG,EAA0G,CAA1G,CADiB,EAEhCE,eAAe,CAAC,6BAAD,EAAgC,6BAAhC,EAA+DL,aAA/D,EAA8EC,KAAK,CAACE,KAApF,EAA2F,CAA3F,EAA8F,EAA9F,EAAkG,CAAlG,CAFiB,EAGhCE,eAAe,CAAC,gCAAD,EAAmC,MAAnC,EAA2CL,aAA3C,EAA0DC,KAAK,CAACE,KAAhE,EAAuE,CAAvE,EAA0E,EAA1E,EAA8E,CAA9E,CAHiB,EAIhCU,iBAAiB,CAAC,sCAAD,EAAyC,MAAzC,EAAiDb,aAAjD,EAAgEC,KAAK,CAACC,OAAtE,CAJe,EAKhCW,iBAAiB,CAAC,kCAAD,EAAqC,MAArC,EAA6Cd,SAA7C,EAAwDE,KAAK,CAACC,OAA9D,CALe,EAMhCG,eAAe,CAAC,yCAAD,EAA4C,IAA5C,EAAkDL,aAAlD,EAAiEC,KAAK,CAACE,KAAvE,EAA8E,EAA9E,EAAkF,GAAlF,EAAuF,EAAvF,CANiB,EAOhCU,iBAAiB,CAAC,wCAAD,EAA2C,QAA3C,EAAqDd,SAArD,EAAgEE,KAAK,CAACC,OAAtE,CAPe,EAQhCY,gBAAgB,CAAC,6BAAD,EAAgC,qCAAhC,EAAuEf,SAAvE,EAAkFE,KAAK,CAACG,MAAxF,EAAgG,CAAC,OAAD,EAAU,SAAV,EAAqB,OAArB,EAA8B,iBAA9B,CAAhG,CARgB,EAShCU,gBAAgB,CAAC,oBAAD,EAAuB,gEAAvB,EAAyFf,SAAzF,EAAoGE,KAAK,CAACG,MAA1G,EAAkH,CAAC,yBAAD,EAA4B,yBAA5B,EAAuD,gBAAvD,CAAlH,CATgB,CAA7B","sourcesContent":["const MANDATORY = true\r\nconst NOT_MANDATORY = false\r\nconst TYPES = {\r\n    NUMERIC: 'NUMERIC',\r\n    RANGE: 'RANGE',\r\n    SELECT: 'SELECT'\r\n\r\n}\r\n\r\nfunction createRangeData(name, value, mandatory, type, min, max, ticks) {\r\n    return { name, value, mandatory, type, min, max, ticks };\r\n}\r\nfunction createNumericData(name, value, mandatory, type) {\r\n    return { name, value, mandatory, type };\r\n}\r\nfunction createSelectData(name, value, mandatory, type, data) {\r\n    return { name, value, mandatory, type, data };\r\n}\r\n\r\nexport const mechanicalProperties = [\r\n    createRangeData('Number of CT (interconnected)', '# (interconnected cooling towers)', NOT_MANDATORY, TYPES.RANGE, 1, 10, 1),\r\n    createRangeData('Number of Circulation Pumps', '#  (operational + standby) ', NOT_MANDATORY, TYPES.RANGE, 1, 20, 1),\r\n    createRangeData('Total pumps flow rate capacity', 'm3/h', NOT_MANDATORY, TYPES.RANGE, 1, 50, 1),\r\n    createNumericData('Actual cooling circulation flow rate', 'm3/h', NOT_MANDATORY, TYPES.NUMERIC),\r\n    createNumericData('Available flowrate for UET units', 'm3/h', MANDATORY, TYPES.NUMERIC),\r\n    createRangeData('Total Basin volume (with equation line)', 'm3', NOT_MANDATORY, TYPES.RANGE, 10, 200, 10),\r\n    createNumericData('Pipe length from CT to H.Ex. (approx.)', 'meters', MANDATORY, TYPES.NUMERIC),\r\n    createSelectData('type of fluid to be chilled', 'Water/Ammonia/Freon/Ethylene-glycol', MANDATORY, TYPES.SELECT, ['Water', 'Ammonia', 'Freon', 'Ethylene-glycol']),\r\n    createSelectData('Cooling Tower type', 'external heat exchanger/evaporator - condenser*/direct contact', MANDATORY, TYPES.SELECT, ['external heat exchanger', 'evaporator - condenser*', 'direct contact']),\r\n\r\n]\r\n"]},"metadata":{},"sourceType":"module"}