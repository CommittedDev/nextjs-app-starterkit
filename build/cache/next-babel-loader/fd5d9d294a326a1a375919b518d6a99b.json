{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { TYPES } from \"./data\";\nimport Input from '@material-ui/core/Input';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {// width: '100%',\n      // marginTop: theme.spacing(3),\n      // overflowX: 'auto',\n    },\n    table: {// width: 600,\n    },\n    tableTitle: {\n      fontSize: 20\n    },\n    TableCell: {\n      background: 'green'\n    }\n  };\n});\nexport default function SimpleTable(props) {\n  var tableTitle = props.tableTitle,\n      data = props.data;\n  var classes = useStyles();\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      values = _React$useState2[0],\n      setValues = _React$useState2[1];\n\n  var handleChange = function handleChange(name) {\n    return function (event) {\n      setValues(_defineProperty({}, event.target.id, event.target.value));\n    };\n  };\n\n  console.log('values', values);\n\n  var renderValueType = function renderValueType(row) {\n    switch (row.type) {\n      case TYPES.NUMERIC:\n        return __jsx(Input, {\n          id: \"d5\",\n          label: \"Number\",\n          value: values.age,\n          onChange: handleChange('val'),\n          type: \"number\",\n          className: classes.textField\n        });\n\n      case TYPES.RANGE:\n        return;\n\n      case TYPES.SELECT:\n        return;\n\n      default:\n        return row.type;\n    }\n  };\n\n  var renderTableData = function renderTableData() {\n    return data.map(function (row) {\n      return __jsx(TableRow, {\n        key: row.name\n      }, __jsx(TableCell, {\n        align: \"left\",\n        className: classes.TableCell\n      }, row.name), __jsx(TableCell, {\n        align: \"left\"\n      }, row.value), __jsx(TableCell, {\n        align: \"left\"\n      }, renderValueType(row)));\n    });\n  };\n\n  console.log('data', data);\n  if (!data) return __jsx(\"div\", null, \"no data\");\n  return __jsx(Paper, {\n    className: classes.root\n  }, __jsx(Table, {\n    className: classes.table\n  }, __jsx(TableHead, null, __jsx(TableRow, null, __jsx(TableCell, {\n    className: classes.tableTitle,\n    align: \"left\"\n  }, tableTitle), __jsx(TableCell, {\n    align: \"left\"\n  }, \"Value\"), __jsx(TableCell, {\n    align: \"left\"\n  }, \"Units\"))), __jsx(TableBody, null, renderTableData())));\n}","map":{"version":3,"sources":["C:\\Users\\elad\\Desktop\\committed\\UET\\src\\components\\Table.js"],"names":["React","makeStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","TYPES","Input","useStyles","theme","root","table","tableTitle","fontSize","background","SimpleTable","props","data","classes","useState","values","setValues","handleChange","name","event","target","id","value","console","log","renderValueType","row","type","NUMERIC","age","textField","RANGE","SELECT","renderTableData","map"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { TYPES } from 'src/components/data'\r\nimport Input from '@material-ui/core/Input';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        // width: '100%',\r\n        // marginTop: theme.spacing(3),\r\n        // overflowX: 'auto',\r\n    },\r\n    table: {\r\n        // width: 600,\r\n    },\r\n    tableTitle: {\r\n        fontSize: 20\r\n    },\r\n    TableCell: {\r\n        background: 'green'\r\n    }\r\n}));\r\n\r\n\r\nexport default function SimpleTable(props) {\r\n    const { tableTitle, data } = props\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({});\r\n\r\n    const handleChange = name => event => {\r\n        setValues({ [event.target.id]: event.target.value });\r\n    };\r\n\r\n    console.log('values', values)\r\n    const renderValueType = (row) => {\r\n        switch (row.type) {\r\n            case TYPES.NUMERIC:\r\n                return <Input\r\n                    id=\"d5\"\r\n                    label=\"Number\"\r\n                    value={values.age}\r\n                    onChange={handleChange('val')}\r\n                    type=\"number\"\r\n                    className={classes.textField}\r\n\r\n                />\r\n            case TYPES.RANGE:\r\n                return;\r\n            case TYPES.SELECT:\r\n                return;\r\n\r\n\r\n            default:\r\n                return row.type\r\n        }\r\n    }\r\n\r\n    const renderTableData = () => {\r\n        return data.map(row => (\r\n            <TableRow key={row.name}>\r\n                <TableCell align=\"left\" className={classes.TableCell}>\r\n                    {row.name}\r\n                </TableCell>\r\n                <TableCell align=\"left\">{row.value}</TableCell>\r\n                <TableCell align=\"left\">{renderValueType(row)}</TableCell>\r\n            </TableRow>\r\n        ))\r\n    }\r\n    console.log('data', data);\r\n    if (!data) return <div>no data</div>\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <Table className={classes.table}>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell className={classes.tableTitle} align=\"left\">{tableTitle}</TableCell>\r\n                        <TableCell align=\"left\">Value</TableCell>\r\n                        <TableCell align=\"left\">Units</TableCell>\r\n\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {renderTableData()}\r\n                </TableBody>\r\n            </Table>\r\n        </Paper>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}