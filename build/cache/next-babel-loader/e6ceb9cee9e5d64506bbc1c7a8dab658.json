{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\n// /* eslint camelcase: \"off\" */\nimport { applyMiddleware, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from \"./rootReducer\";\nimport rootSaga from \"./rootSaga\";\n\nvar bindMiddleware = function bindMiddleware(middleware) {\n  if (process.env.NODE_ENV !== 'production') {\n    var _require = require('redux-devtools-extension'),\n        composeWithDevTools = _require.composeWithDevTools;\n\n    return composeWithDevTools(applyMiddleware.apply(void 0, _toConsumableArray(middleware)));\n  }\n\n  return applyMiddleware.apply(void 0, _toConsumableArray(middleware));\n};\n\nfunction configureStore() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var sagaMiddleware = createSagaMiddleware();\n  var store = createStore(rootReducer, initialState, bindMiddleware([sagaMiddleware]));\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n}\n\nexport default configureStore;","map":{"version":3,"sources":["C:\\Users\\elad\\Desktop\\committed\\UET\\src\\store\\createStore.js"],"names":["applyMiddleware","createStore","createSagaMiddleware","rootReducer","rootSaga","bindMiddleware","middleware","process","env","NODE_ENV","require","composeWithDevTools","configureStore","initialState","sagaMiddleware","store","sagaTask","run"],"mappings":";AAAA;AACA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,WAAP;AACA,OAAOC,QAAP;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,UAAU,EAAI;AACnC,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AAAA,mBACTC,OAAO,CAAC,0BAAD,CADE;AAAA,QACjCC,mBADiC,YACjCA,mBADiC;;AAEzC,WAAOA,mBAAmB,CAACX,eAAe,MAAf,4BAAmBM,UAAnB,EAAD,CAA1B;AACD;;AACD,SAAON,eAAe,MAAf,4BAAmBM,UAAnB,EAAP;AACD,CAND;;AAQA,SAASM,cAAT,GAA2C;AAAA,MAAnBC,YAAmB,uEAAJ,EAAI;AACzC,MAAMC,cAAc,GAAGZ,oBAAoB,EAA3C;AACA,MAAMa,KAAK,GAAGd,WAAW,CACvBE,WADuB,EAEvBU,YAFuB,EAGvBR,cAAc,CAAC,CAACS,cAAD,CAAD,CAHS,CAAzB;AAKAC,EAAAA,KAAK,CAACC,QAAN,GAAiBF,cAAc,CAACG,GAAf,CAAmBb,QAAnB,CAAjB;AAEA,SAAOW,KAAP;AACD;;AAED,eAAeH,cAAf","sourcesContent":["// /* eslint camelcase: \"off\" */\r\nimport { applyMiddleware, createStore } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\n\r\nimport rootReducer from 'src/store/rootReducer';\r\nimport rootSaga from 'src/store/rootSaga';\r\n\r\nconst bindMiddleware = middleware => {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    const { composeWithDevTools } = require('redux-devtools-extension')\r\n    return composeWithDevTools(applyMiddleware(...middleware))\r\n  }\r\n  return applyMiddleware(...middleware)\r\n}\r\n\r\nfunction configureStore(initialState = {}) {\r\n  const sagaMiddleware = createSagaMiddleware()\r\n  const store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    bindMiddleware([sagaMiddleware])\r\n  )\r\n  store.sagaTask = sagaMiddleware.run(rootSaga)\r\n\r\n  return store\r\n}\r\n\r\nexport default configureStore;"]},"metadata":{},"sourceType":"module"}