{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\n\n/* eslint-disable jsx-a11y/anchor-has-content */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withRouter } from 'next/router';\nimport NextLink from 'next/link';\nimport MuiLink from '@material-ui/core/Link';\nconst NextComposed = React.forwardRef(function NextComposed(props, ref) {\n  const {\n    as,\n    href,\n    prefetch\n  } = props,\n        other = _objectWithoutProperties(props, [\"as\", \"href\", \"prefetch\"]);\n\n  return __jsx(NextLink, {\n    href: href,\n    prefetch: prefetch,\n    as: as\n  }, __jsx(\"a\", _extends({\n    ref: ref\n  }, other)));\n});\nNextComposed.propTypes = {\n  as: PropTypes.string,\n  href: PropTypes.string,\n  prefetch: PropTypes.bool\n}; // A styled version of the Next.js Link component:\n// https://nextjs.org/docs/#with-link\n\nfunction Link(props) {\n  const {\n    activeClassName = 'active',\n    router,\n    className: classNameProps,\n    innerRef,\n    naked\n  } = props,\n        other = _objectWithoutProperties(props, [\"activeClassName\", \"router\", \"className\", \"innerRef\", \"naked\"]);\n\n  const className = clsx(classNameProps, {\n    [activeClassName]: router.pathname === props.href && activeClassName\n  });\n\n  if (naked) {\n    return __jsx(NextComposed, _extends({\n      className: className,\n      ref: innerRef\n    }, other));\n  }\n\n  return __jsx(MuiLink, _extends({\n    component: NextComposed,\n    className: className,\n    ref: innerRef\n  }, other));\n}\n\nLink.propTypes = {\n  activeClassName: PropTypes.string,\n  as: PropTypes.string,\n  className: PropTypes.string,\n  href: PropTypes.string,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  naked: PropTypes.bool,\n  onClick: PropTypes.func,\n  prefetch: PropTypes.bool,\n  router: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }).isRequired\n};\nconst RouterLink = withRouter(Link);\nexport default React.forwardRef((props, ref) => __jsx(RouterLink, _extends({}, props, {\n  innerRef: ref\n})));","map":{"version":3,"sources":["C:\\Users\\elad\\Desktop\\committed\\UET\\src\\Link.js"],"names":["React","PropTypes","clsx","withRouter","NextLink","MuiLink","NextComposed","forwardRef","props","ref","as","href","prefetch","other","propTypes","string","bool","Link","activeClassName","router","className","classNameProps","innerRef","naked","pathname","oneOfType","func","object","onClick","shape","isRequired","RouterLink"],"mappings":";;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AAEA,MAAMC,YAAY,GAAGN,KAAK,CAACO,UAAN,CAAiB,SAASD,YAAT,CAAsBE,KAAtB,EAA6BC,GAA7B,EAAkC;AACtE,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,IAAN;AAAYC,IAAAA;AAAZ,MAAmCJ,KAAzC;AAAA,QAA+BK,KAA/B,4BAAyCL,KAAzC;;AAEA,SACE,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEG,IAAhB;AAAsB,IAAA,QAAQ,EAAEC,QAAhC;AAA0C,IAAA,EAAE,EAAEF;AAA9C,KACE;AAAG,IAAA,GAAG,EAAED;AAAR,KAAiBI,KAAjB,EADF,CADF;AAKD,CARoB,CAArB;AAUAP,YAAY,CAACQ,SAAb,GAAyB;AACvBJ,EAAAA,EAAE,EAAET,SAAS,CAACc,MADS;AAEvBJ,EAAAA,IAAI,EAAEV,SAAS,CAACc,MAFO;AAGvBH,EAAAA,QAAQ,EAAEX,SAAS,CAACe;AAHG,CAAzB,C,CAMA;AACA;;AACA,SAASC,IAAT,CAAcT,KAAd,EAAqB;AACnB,QAAM;AACJU,IAAAA,eAAe,GAAG,QADd;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,SAAS,EAAEC,cAHP;AAIJC,IAAAA,QAJI;AAKJC,IAAAA;AALI,MAOFf,KAPJ;AAAA,QAMKK,KANL,4BAOIL,KAPJ;;AASA,QAAMY,SAAS,GAAGlB,IAAI,CAACmB,cAAD,EAAiB;AACrC,KAACH,eAAD,GAAmBC,MAAM,CAACK,QAAP,KAAoBhB,KAAK,CAACG,IAA1B,IAAkCO;AADhB,GAAjB,CAAtB;;AAIA,MAAIK,KAAJ,EAAW;AACT,WAAO,MAAC,YAAD;AAAc,MAAA,SAAS,EAAEH,SAAzB;AAAoC,MAAA,GAAG,EAAEE;AAAzC,OAAuDT,KAAvD,EAAP;AACD;;AAED,SAAO,MAAC,OAAD;AAAS,IAAA,SAAS,EAAEP,YAApB;AAAkC,IAAA,SAAS,EAAEc,SAA7C;AAAwD,IAAA,GAAG,EAAEE;AAA7D,KAA2ET,KAA3E,EAAP;AACD;;AAEDI,IAAI,CAACH,SAAL,GAAiB;AACfI,EAAAA,eAAe,EAAEjB,SAAS,CAACc,MADZ;AAEfL,EAAAA,EAAE,EAAET,SAAS,CAACc,MAFC;AAGfK,EAAAA,SAAS,EAAEnB,SAAS,CAACc,MAHN;AAIfJ,EAAAA,IAAI,EAAEV,SAAS,CAACc,MAJD;AAKfO,EAAAA,QAAQ,EAAErB,SAAS,CAACwB,SAAV,CAAoB,CAACxB,SAAS,CAACyB,IAAX,EAAiBzB,SAAS,CAAC0B,MAA3B,CAApB,CALK;AAMfJ,EAAAA,KAAK,EAAEtB,SAAS,CAACe,IANF;AAOfY,EAAAA,OAAO,EAAE3B,SAAS,CAACyB,IAPJ;AAQfd,EAAAA,QAAQ,EAAEX,SAAS,CAACe,IARL;AASfG,EAAAA,MAAM,EAAElB,SAAS,CAAC4B,KAAV,CAAgB;AACtBL,IAAAA,QAAQ,EAAEvB,SAAS,CAACc,MAAV,CAAiBe;AADL,GAAhB,EAELA;AAXY,CAAjB;AAcA,MAAMC,UAAU,GAAG5B,UAAU,CAACc,IAAD,CAA7B;AAEA,eAAejB,KAAK,CAACO,UAAN,CAAiB,CAACC,KAAD,EAAQC,GAAR,KAAgB,MAAC,UAAD,eAAgBD,KAAhB;AAAuB,EAAA,QAAQ,EAAEC;AAAjC,GAAjC,CAAf","sourcesContent":["/* eslint-disable jsx-a11y/anchor-has-content */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { withRouter } from 'next/router';\r\nimport NextLink from 'next/link';\r\nimport MuiLink from '@material-ui/core/Link';\r\n\r\nconst NextComposed = React.forwardRef(function NextComposed(props, ref) {\r\n  const { as, href, prefetch, ...other } = props;\r\n\r\n  return (\r\n    <NextLink href={href} prefetch={prefetch} as={as}>\r\n      <a ref={ref} {...other} />\r\n    </NextLink>\r\n  );\r\n});\r\n\r\nNextComposed.propTypes = {\r\n  as: PropTypes.string,\r\n  href: PropTypes.string,\r\n  prefetch: PropTypes.bool,\r\n};\r\n\r\n// A styled version of the Next.js Link component:\r\n// https://nextjs.org/docs/#with-link\r\nfunction Link(props) {\r\n  const {\r\n    activeClassName = 'active',\r\n    router,\r\n    className: classNameProps,\r\n    innerRef,\r\n    naked,\r\n    ...other\r\n  } = props;\r\n\r\n  const className = clsx(classNameProps, {\r\n    [activeClassName]: router.pathname === props.href && activeClassName,\r\n  });\r\n\r\n  if (naked) {\r\n    return <NextComposed className={className} ref={innerRef} {...other} />;\r\n  }\r\n\r\n  return <MuiLink component={NextComposed} className={className} ref={innerRef} {...other} />;\r\n}\r\n\r\nLink.propTypes = {\r\n  activeClassName: PropTypes.string,\r\n  as: PropTypes.string,\r\n  className: PropTypes.string,\r\n  href: PropTypes.string,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  naked: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n  prefetch: PropTypes.bool,\r\n  router: PropTypes.shape({\r\n    pathname: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nconst RouterLink = withRouter(Link);\r\n\r\nexport default React.forwardRef((props, ref) => <RouterLink {...props} innerRef={ref} />);\r\n"]},"metadata":{},"sourceType":"module"}